### YamlMime:ManagedReference
items:
- uid: YJL.Tween.ITweenData`1
  commentId: T:YJL.Tween.ITweenData`1
  id: ITweenData`1
  parent: YJL.Tween
  children:
  - YJL.Tween.ITweenData`1.Duration
  - YJL.Tween.ITweenData`1.FromValue
  - YJL.Tween.ITweenData`1.LerpFunc
  - YJL.Tween.ITweenData`1.Param
  - YJL.Tween.ITweenData`1.ToValue
  langs:
  - csharp
  - vb
  name: ITweenData<T>
  nameWithType: ITweenData<T>
  fullName: YJL.Tween.ITweenData<T>
  type: Interface
  source:
    remote:
      path: Assets/Tweenie/Runtime/Core/Tweener.cs
      branch: main
      repo: git@github.com:yjlintw/Tweenie.git
    id: ITweenData
    path: ../Assets/Tweenie/Runtime/Core/Tweener.cs
    startLine: 38
  assemblies:
  - YJL.Tweenie
  namespace: YJL.Tween
  summary: The tween data interface
  example: []
  syntax:
    content: public interface ITweenData<T>
    typeParameters:
    - id: T
    content.vb: Public Interface ITweenData(Of T)
  nameWithType.vb: ITweenData(Of T)
  fullName.vb: YJL.Tween.ITweenData(Of T)
  name.vb: ITweenData(Of T)
- uid: YJL.Tween.ITweenData`1.Param
  commentId: P:YJL.Tween.ITweenData`1.Param
  id: Param
  parent: YJL.Tween.ITweenData`1
  langs:
  - csharp
  - vb
  name: Param
  nameWithType: ITweenData<T>.Param
  fullName: YJL.Tween.ITweenData<T>.Param
  type: Property
  source:
    remote:
      path: Assets/Tweenie/Runtime/Core/Tweener.cs
      branch: main
      repo: git@github.com:yjlintw/Tweenie.git
    id: Param
    path: ../Assets/Tweenie/Runtime/Core/Tweener.cs
    startLine: 43
  assemblies:
  - YJL.Tweenie
  namespace: YJL.Tween
  summary: Parameter Setter
  example: []
  syntax:
    content: Action<T> Param { get; set; }
    parameters: []
    return:
      type: System.Action{{T}}
    content.vb: Property Param As Action(Of T)
  overload: YJL.Tween.ITweenData`1.Param*
  nameWithType.vb: ITweenData(Of T).Param
  fullName.vb: YJL.Tween.ITweenData(Of T).Param
- uid: YJL.Tween.ITweenData`1.FromValue
  commentId: P:YJL.Tween.ITweenData`1.FromValue
  id: FromValue
  parent: YJL.Tween.ITweenData`1
  langs:
  - csharp
  - vb
  name: FromValue
  nameWithType: ITweenData<T>.FromValue
  fullName: YJL.Tween.ITweenData<T>.FromValue
  type: Property
  source:
    remote:
      path: Assets/Tweenie/Runtime/Core/Tweener.cs
      branch: main
      repo: git@github.com:yjlintw/Tweenie.git
    id: FromValue
    path: ../Assets/Tweenie/Runtime/Core/Tweener.cs
    startLine: 47
  assemblies:
  - YJL.Tweenie
  namespace: YJL.Tween
  summary: The value this Tweener starts from
  example: []
  syntax:
    content: T FromValue { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Property FromValue As T
  overload: YJL.Tween.ITweenData`1.FromValue*
  nameWithType.vb: ITweenData(Of T).FromValue
  fullName.vb: YJL.Tween.ITweenData(Of T).FromValue
- uid: YJL.Tween.ITweenData`1.ToValue
  commentId: P:YJL.Tween.ITweenData`1.ToValue
  id: ToValue
  parent: YJL.Tween.ITweenData`1
  langs:
  - csharp
  - vb
  name: ToValue
  nameWithType: ITweenData<T>.ToValue
  fullName: YJL.Tween.ITweenData<T>.ToValue
  type: Property
  source:
    remote:
      path: Assets/Tweenie/Runtime/Core/Tweener.cs
      branch: main
      repo: git@github.com:yjlintw/Tweenie.git
    id: ToValue
    path: ../Assets/Tweenie/Runtime/Core/Tweener.cs
    startLine: 51
  assemblies:
  - YJL.Tweenie
  namespace: YJL.Tween
  summary: The value this Tweener will be set to
  example: []
  syntax:
    content: T ToValue { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Property ToValue As T
  overload: YJL.Tween.ITweenData`1.ToValue*
  nameWithType.vb: ITweenData(Of T).ToValue
  fullName.vb: YJL.Tween.ITweenData(Of T).ToValue
- uid: YJL.Tween.ITweenData`1.Duration
  commentId: P:YJL.Tween.ITweenData`1.Duration
  id: Duration
  parent: YJL.Tween.ITweenData`1
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: ITweenData<T>.Duration
  fullName: YJL.Tween.ITweenData<T>.Duration
  type: Property
  source:
    remote:
      path: Assets/Tweenie/Runtime/Core/Tweener.cs
      branch: main
      repo: git@github.com:yjlintw/Tweenie.git
    id: Duration
    path: ../Assets/Tweenie/Runtime/Core/Tweener.cs
    startLine: 55
  assemblies:
  - YJL.Tweenie
  namespace: YJL.Tween
  summary: The time in seconds it will take from FromValue to ToValue
  example: []
  syntax:
    content: float Duration { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Property Duration As Single
  overload: YJL.Tween.ITweenData`1.Duration*
  nameWithType.vb: ITweenData(Of T).Duration
  fullName.vb: YJL.Tween.ITweenData(Of T).Duration
- uid: YJL.Tween.ITweenData`1.LerpFunc
  commentId: P:YJL.Tween.ITweenData`1.LerpFunc
  id: LerpFunc
  parent: YJL.Tween.ITweenData`1
  langs:
  - csharp
  - vb
  name: LerpFunc
  nameWithType: ITweenData<T>.LerpFunc
  fullName: YJL.Tween.ITweenData<T>.LerpFunc
  type: Property
  source:
    remote:
      path: Assets/Tweenie/Runtime/Core/Tweener.cs
      branch: main
      repo: git@github.com:yjlintw/Tweenie.git
    id: LerpFunc
    path: ../Assets/Tweenie/Runtime/Core/Tweener.cs
    startLine: 59
  assemblies:
  - YJL.Tweenie
  namespace: YJL.Tween
  summary: The interpolation function from FromValue to ToValue, controlled by a t(0.0f to 1.0f)
  example: []
  syntax:
    content: Func<T, T, float, T> LerpFunc { get; set; }
    parameters: []
    return:
      type: System.Func{{T},{T},System.Single,{T}}
    content.vb: Property LerpFunc As Func(Of T, T, Single, T)
  overload: YJL.Tween.ITweenData`1.LerpFunc*
  nameWithType.vb: ITweenData(Of T).LerpFunc
  fullName.vb: YJL.Tween.ITweenData(Of T).LerpFunc
references:
- uid: YJL.Tween
  commentId: N:YJL.Tween
  href: YJL.html
  name: YJL.Tween
  nameWithType: YJL.Tween
  fullName: YJL.Tween
  spec.csharp:
  - uid: YJL
    name: YJL
    href: YJL.html
  - name: .
  - uid: YJL.Tween
    name: Tween
    href: YJL.Tween.html
  spec.vb:
  - uid: YJL
    name: YJL
    href: YJL.html
  - name: .
  - uid: YJL.Tween
    name: Tween
    href: YJL.Tween.html
- uid: YJL.Tween.ITweenData`1.Param*
  commentId: Overload:YJL.Tween.ITweenData`1.Param
  href: YJL.Tween.ITweenData-1.html#YJL.Tween.ITweenData`1.Param
  name: Param
  nameWithType: ITweenData<T>.Param
  fullName: YJL.Tween.ITweenData<T>.Param
  nameWithType.vb: ITweenData(Of T).Param
  fullName.vb: YJL.Tween.ITweenData(Of T).Param
- uid: System.Action{{T}}
  commentId: T:System.Action{``0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: YJL.Tween.ITweenData`1.FromValue*
  commentId: Overload:YJL.Tween.ITweenData`1.FromValue
  href: YJL.Tween.ITweenData-1.html#YJL.Tween.ITweenData`1.FromValue
  name: FromValue
  nameWithType: ITweenData<T>.FromValue
  fullName: YJL.Tween.ITweenData<T>.FromValue
  nameWithType.vb: ITweenData(Of T).FromValue
  fullName.vb: YJL.Tween.ITweenData(Of T).FromValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: YJL.Tween.ITweenData`1.ToValue*
  commentId: Overload:YJL.Tween.ITweenData`1.ToValue
  href: YJL.Tween.ITweenData-1.html#YJL.Tween.ITweenData`1.ToValue
  name: ToValue
  nameWithType: ITweenData<T>.ToValue
  fullName: YJL.Tween.ITweenData<T>.ToValue
  nameWithType.vb: ITweenData(Of T).ToValue
  fullName.vb: YJL.Tween.ITweenData(Of T).ToValue
- uid: YJL.Tween.ITweenData`1.Duration*
  commentId: Overload:YJL.Tween.ITweenData`1.Duration
  href: YJL.Tween.ITweenData-1.html#YJL.Tween.ITweenData`1.Duration
  name: Duration
  nameWithType: ITweenData<T>.Duration
  fullName: YJL.Tween.ITweenData<T>.Duration
  nameWithType.vb: ITweenData(Of T).Duration
  fullName.vb: YJL.Tween.ITweenData(Of T).Duration
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: YJL.Tween.ITweenData`1.LerpFunc*
  commentId: Overload:YJL.Tween.ITweenData`1.LerpFunc
  href: YJL.Tween.ITweenData-1.html#YJL.Tween.ITweenData`1.LerpFunc
  name: LerpFunc
  nameWithType: ITweenData<T>.LerpFunc
  fullName: YJL.Tween.ITweenData<T>.LerpFunc
  nameWithType.vb: ITweenData(Of T).LerpFunc
  fullName.vb: YJL.Tween.ITweenData(Of T).LerpFunc
- uid: System.Func{{T},{T},System.Single,{T}}
  commentId: T:System.Func{``0,``0,System.Single,``0}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T, T, float, T>
  nameWithType: Func<T, T, float, T>
  fullName: System.Func<T, T, float, T>
  nameWithType.vb: Func(Of T, T, Single, T)
  fullName.vb: System.Func(Of T, T, Single, T)
  name.vb: Func(Of T, T, Single, T)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: )
